import type { SgNode } from "@ast-grep/napi";
import type { Reference } from "./flow";
import type * as vscode from "vscode";

const ignoreKinds = [
	"=",
	"identifier",
	"integer",
	"[",
	"]",
	"(",
	")",
	",",
	"lambda",
	":",
	"lambda_parameters",
	"{",
	"}",
	"if",
	"else",
	"or",
	"not",
	"and",
	"==",
	"!=",
	"<",
	">",
	"<=",
	">=",
	"in",
	"not in",
	"is",
	"is not",
	"|",
	"^",
	"&",
	"<<",
	">>",
	"+",
	"-",
	"*",
	"/",
	"//",
	"%",
	"**",
	"true",
	"false",
	"await",
	"ellipsis",
	"string_content",
	"string_start",
	"string_end",
	"for",
	"in",
	"int",
	"float",
	"+=",
	"-=",
	"*=",
	"/=",
	"//=",
	"%=",
	"**=",
	"&=",
	"|=",
	"^=",
];

export function handleExpression(
	node: SgNode,
	document: vscode.TextDocument,
): Reference[] {
	// throw new Error(
	// 	`Unknown Expression Type (no switch statements activated): ${node.kind()}`,
	// );
	return [];
}
